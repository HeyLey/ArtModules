#include "services.fcl"
#include "BackTracker.fcl"
#include "KalmanTrackAna.fcl"


process_name: KalmanTrackAna

services:
{
 TFileService: { fileName: "kalmantrackana-histos.root" }
 scheduler:    { wantTracer: true wantSummary: true }
 message:      @local::standard_out
 TimeTracker: { }
 RandomNumberGenerator: {} #ART native random number generator
 @table::standard_services
}
services.BackTracker: @local::standard_backtracker

#source is a root file
source:
{
  module_type: RootInput
  maxEvents: -1 #Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defind; they are scheduled later.
# Modules are grouped by type.
physics:
{
 #producers:{}
 #filters:{}
 analyzers:    {KalmanTrackAna:  @local::standard_kalmantrackana}

 # define the output stream, there could be more than one if using filters
 stream1: [KalmanTrackAna]

 # trigger_paths is a keyword and contains the paths that modify the art::Event
 trigger_paths: []

 end_paths:     [stream1]

 }